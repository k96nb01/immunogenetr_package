% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ambiguity_table_to_GLstring.R
\name{ambiguity_table_to_GLstring}
\alias{ambiguity_table_to_GLstring}
\title{ambiguity_table_to_GLstring}
\usage{
ambiguity_table_to_GLstring(data)
}
\arguments{
\item{data}{A data frame containing columns that represent possible gene
locations, loci, genotype ambiguities, genotypes, and haplotypes.}
}
\value{
A GL string representing the combined gene locations, loci, genotype
ambiguities, genotypes, and haplotypes.
}
\description{
A function that converts a data table of HLA allele ambiguities
into a GL string format. The function processes the table by combining allele
ambiguities, haplotypes, gene copies, and loci into a structured GL string.
}
\examples{
# Example data frame input
data <- data.frame(
  value = c(
    "HLA-A*01:01:01:01", "HLA-A*01:02", "HLA-A*01:03", "HLA-A*01:95",
    "HLA-A*24:02:01:01", "HLA-A*01:01:01:01", "HLA-A*01:03",
    "HLA-A*24:03:01:01", "HLA-B*07:01:01", "B*15:01:01"
  ),
  possible_gene_location = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
  locus = c("HLA-A", "HLA-A", "HLA-A", "HLA-A", "HLA-A", "HLA-A", "HLA-A",
    "HLA-A", "HLA-B", "HLA-B"),
  genotype_ambiguity = c(1, 1, 1, 1, 1, 2, 2, 2, 1, 1),
  genotype = c(1, 1, 1, 1, 2, 1, 1, 2, 1, 2),
  haplotype = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
  entry = c(1, 2, 3, 4, 1, 1, 2, 1, 1, 1),
  stringsAsFactors = FALSE
)
result <- ambiguity_table_to_GLstring(data)
print(result)

}
