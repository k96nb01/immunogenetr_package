% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HLA_columns_to_GLstring.R
\name{HLA_columns_to_GLstring}
\alias{HLA_columns_to_GLstring}
\title{HLA_columns_to_GLstring}
\usage{
HLA_columns_to_GLstring(
  data,
  case_column,
  HLA_typing_columns,
  prefix_to_remove = "",
  suffix_to_remove = "",
  serologic = FALSE
)
}
\arguments{
\item{data}{A data frame with each row including an HLA typing result, with
individual columns containing a single allele.}

\item{case_column}{A column that uniquely identifies the typing result.}

\item{HLA_typing_columns}{The list of columns containing the HLA alleles.}

\item{prefix_to_remove}{An optional string of characters to remove from the
locus names.}

\item{suffix_to_remove}{An optional string of characters to remove from the
locus names.}

\item{serologic}{Whether the final type should be formatted in serologic resolution;
molecular resolution is the default.}
}
\value{
A list of GL strings in the order of the original data frame.
}
\description{
A function to take HLA typing data spread across different columns,
as is often found in wild-caught data, and transform it to a GL string.
}
\examples{
df2 <- data.frame(
  patient = c("patient1", "patient2", "patient3"),
  A1 = c("A*01:01", "A*02:01", "A*03:01"),
  A2 = c("A*11:01", "A*24:02", "A*26:01"),
  B1 = c("B*07:02", "B*08:01", "B*15:01"),
  B2 = c("B*44:02", "B*40:01", "B*27:05"),
  C1 = c("C*03:04", "C*04:01", "C*05:01"),
  C2 = c("C*07:01", "C*07:02", "C*08:01"),
  stringsAsFactors = FALSE
)

HLA_columns_to_GLstring(df2, case_column = "patient", HLA_typing_columns = c("A1", "A2", "B1", "B2", "C1", "C2"))

}
